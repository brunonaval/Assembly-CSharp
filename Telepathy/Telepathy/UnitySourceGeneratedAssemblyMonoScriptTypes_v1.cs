using System;
using System.CodeDom.Compiler;
using System.ComponentModel;
using System.Runtime.CompilerServices;

// Token: 0x02000002 RID: 2
[CompilerGenerated]
[EditorBrowsable(EditorBrowsableState.Never)]
[GeneratedCode("Unity.MonoScriptGenerator.MonoScriptInfoGenerator", null)]
internal class UnitySourceGeneratedAssemblyMonoScriptTypes_v1
{
	// Token: 0x06000001 RID: 1 RVA: 0x00002050 File Offset: 0x00000250
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	private static UnitySourceGeneratedAssemblyMonoScriptTypes_v1.MonoScriptData Get()
	{
		UnitySourceGeneratedAssemblyMonoScriptTypes_v1.MonoScriptData result = default(UnitySourceGeneratedAssemblyMonoScriptTypes_v1.MonoScriptData);
		result.FilePathsData = new byte[]
		{
			0,
			0,
			0,
			2,
			0,
			0,
			0,
			55,
			92,
			65,
			115,
			115,
			101,
			116,
			115,
			92,
			77,
			105,
			114,
			114,
			111,
			114,
			92,
			84,
			114,
			97,
			110,
			115,
			112,
			111,
			114,
			116,
			115,
			92,
			84,
			101,
			108,
			101,
			112,
			97,
			116,
			104,
			121,
			92,
			84,
			101,
			108,
			101,
			112,
			97,
			116,
			104,
			121,
			92,
			67,
			108,
			105,
			101,
			110,
			116,
			46,
			99,
			115,
			0,
			0,
			0,
			1,
			0,
			0,
			0,
			55,
			92,
			65,
			115,
			115,
			101,
			116,
			115,
			92,
			77,
			105,
			114,
			114,
			111,
			114,
			92,
			84,
			114,
			97,
			110,
			115,
			112,
			111,
			114,
			116,
			115,
			92,
			84,
			101,
			108,
			101,
			112,
			97,
			116,
			104,
			121,
			92,
			84,
			101,
			108,
			101,
			112,
			97,
			116,
			104,
			121,
			92,
			67,
			111,
			109,
			109,
			111,
			110,
			46,
			99,
			115,
			0,
			0,
			0,
			1,
			0,
			0,
			0,
			64,
			92,
			65,
			115,
			115,
			101,
			116,
			115,
			92,
			77,
			105,
			114,
			114,
			111,
			114,
			92,
			84,
			114,
			97,
			110,
			115,
			112,
			111,
			114,
			116,
			115,
			92,
			84,
			101,
			108,
			101,
			112,
			97,
			116,
			104,
			121,
			92,
			84,
			101,
			108,
			101,
			112,
			97,
			116,
			104,
			121,
			92,
			67,
			111,
			110,
			110,
			101,
			99,
			116,
			105,
			111,
			110,
			83,
			116,
			97,
			116,
			101,
			46,
			99,
			115,
			0,
			0,
			0,
			1,
			0,
			0,
			0,
			52,
			92,
			65,
			115,
			115,
			101,
			116,
			115,
			92,
			77,
			105,
			114,
			114,
			111,
			114,
			92,
			84,
			114,
			97,
			110,
			115,
			112,
			111,
			114,
			116,
			115,
			92,
			84,
			101,
			108,
			101,
			112,
			97,
			116,
			104,
			121,
			92,
			84,
			101,
			108,
			101,
			112,
			97,
			116,
			104,
			121,
			92,
			76,
			111,
			103,
			46,
			99,
			115,
			0,
			0,
			0,
			2,
			0,
			0,
			0,
			71,
			92,
			65,
			115,
			115,
			101,
			116,
			115,
			92,
			77,
			105,
			114,
			114,
			111,
			114,
			92,
			84,
			114,
			97,
			110,
			115,
			112,
			111,
			114,
			116,
			115,
			92,
			84,
			101,
			108,
			101,
			112,
			97,
			116,
			104,
			121,
			92,
			84,
			101,
			108,
			101,
			112,
			97,
			116,
			104,
			121,
			92,
			77,
			97,
			103,
			110,
			105,
			102,
			105,
			99,
			101,
			110,
			116,
			82,
			101,
			99,
			101,
			105,
			118,
			101,
			80,
			105,
			112,
			101,
			46,
			99,
			115,
			0,
			0,
			0,
			1,
			0,
			0,
			0,
			68,
			92,
			65,
			115,
			115,
			101,
			116,
			115,
			92,
			77,
			105,
			114,
			114,
			111,
			114,
			92,
			84,
			114,
			97,
			110,
			115,
			112,
			111,
			114,
			116,
			115,
			92,
			84,
			101,
			108,
			101,
			112,
			97,
			116,
			104,
			121,
			92,
			84,
			101,
			108,
			101,
			112,
			97,
			116,
			104,
			121,
			92,
			77,
			97,
			103,
			110,
			105,
			102,
			105,
			99,
			101,
			110,
			116,
			83,
			101,
			110,
			100,
			80,
			105,
			112,
			101,
			46,
			99,
			115,
			0,
			0,
			0,
			1,
			0,
			0,
			0,
			72,
			92,
			65,
			115,
			115,
			101,
			116,
			115,
			92,
			77,
			105,
			114,
			114,
			111,
			114,
			92,
			84,
			114,
			97,
			110,
			115,
			112,
			111,
			114,
			116,
			115,
			92,
			84,
			101,
			108,
			101,
			112,
			97,
			116,
			104,
			121,
			92,
			84,
			101,
			108,
			101,
			112,
			97,
			116,
			104,
			121,
			92,
			78,
			101,
			116,
			119,
			111,
			114,
			107,
			83,
			116,
			114,
			101,
			97,
			109,
			69,
			120,
			116,
			101,
			110,
			115,
			105,
			111,
			110,
			115,
			46,
			99,
			115,
			0,
			0,
			0,
			1,
			0,
			0,
			0,
			53,
			92,
			65,
			115,
			115,
			101,
			116,
			115,
			92,
			77,
			105,
			114,
			114,
			111,
			114,
			92,
			84,
			114,
			97,
			110,
			115,
			112,
			111,
			114,
			116,
			115,
			92,
			84,
			101,
			108,
			101,
			112,
			97,
			116,
			104,
			121,
			92,
			84,
			101,
			108,
			101,
			112,
			97,
			116,
			104,
			121,
			92,
			80,
			111,
			111,
			108,
			46,
			99,
			115,
			0,
			0,
			0,
			1,
			0,
			0,
			0,
			55,
			92,
			65,
			115,
			115,
			101,
			116,
			115,
			92,
			77,
			105,
			114,
			114,
			111,
			114,
			92,
			84,
			114,
			97,
			110,
			115,
			112,
			111,
			114,
			116,
			115,
			92,
			84,
			101,
			108,
			101,
			112,
			97,
			116,
			104,
			121,
			92,
			84,
			101,
			108,
			101,
			112,
			97,
			116,
			104,
			121,
			92,
			83,
			101,
			114,
			118,
			101,
			114,
			46,
			99,
			115,
			0,
			0,
			0,
			1,
			0,
			0,
			0,
			64,
			92,
			65,
			115,
			115,
			101,
			116,
			115,
			92,
			77,
			105,
			114,
			114,
			111,
			114,
			92,
			84,
			114,
			97,
			110,
			115,
			112,
			111,
			114,
			116,
			115,
			92,
			84,
			101,
			108,
			101,
			112,
			97,
			116,
			104,
			121,
			92,
			84,
			101,
			108,
			101,
			112,
			97,
			116,
			104,
			121,
			92,
			84,
			104,
			114,
			101,
			97,
			100,
			70,
			117,
			110,
			99,
			116,
			105,
			111,
			110,
			115,
			46,
			99,
			115,
			0,
			0,
			0,
			1,
			0,
			0,
			0,
			54,
			92,
			65,
			115,
			115,
			101,
			116,
			115,
			92,
			77,
			105,
			114,
			114,
			111,
			114,
			92,
			84,
			114,
			97,
			110,
			115,
			112,
			111,
			114,
			116,
			115,
			92,
			84,
			101,
			108,
			101,
			112,
			97,
			116,
			104,
			121,
			92,
			84,
			101,
			108,
			101,
			112,
			97,
			116,
			104,
			121,
			92,
			85,
			116,
			105,
			108,
			115,
			46,
			99,
			115
		};
		result.TypesData = new byte[]
		{
			0,
			0,
			0,
			0,
			31,
			84,
			101,
			108,
			101,
			112,
			97,
			116,
			104,
			121,
			124,
			67,
			108,
			105,
			101,
			110,
			116,
			67,
			111,
			110,
			110,
			101,
			99,
			116,
			105,
			111,
			110,
			83,
			116,
			97,
			116,
			101,
			0,
			0,
			0,
			0,
			16,
			84,
			101,
			108,
			101,
			112,
			97,
			116,
			104,
			121,
			124,
			67,
			108,
			105,
			101,
			110,
			116,
			0,
			0,
			0,
			0,
			16,
			84,
			101,
			108,
			101,
			112,
			97,
			116,
			104,
			121,
			124,
			67,
			111,
			109,
			109,
			111,
			110,
			0,
			0,
			0,
			0,
			25,
			84,
			101,
			108,
			101,
			112,
			97,
			116,
			104,
			121,
			124,
			67,
			111,
			110,
			110,
			101,
			99,
			116,
			105,
			111,
			110,
			83,
			116,
			97,
			116,
			101,
			0,
			0,
			0,
			0,
			13,
			84,
			101,
			108,
			101,
			112,
			97,
			116,
			104,
			121,
			124,
			76,
			111,
			103,
			0,
			0,
			0,
			0,
			32,
			84,
			101,
			108,
			101,
			112,
			97,
			116,
			104,
			121,
			124,
			77,
			97,
			103,
			110,
			105,
			102,
			105,
			99,
			101,
			110,
			116,
			82,
			101,
			99,
			101,
			105,
			118,
			101,
			80,
			105,
			112,
			101,
			0,
			0,
			0,
			0,
			38,
			84,
			101,
			108,
			101,
			112,
			97,
			116,
			104,
			121,
			46,
			77,
			97,
			103,
			110,
			105,
			102,
			105,
			99,
			101,
			110,
			116,
			82,
			101,
			99,
			101,
			105,
			118,
			101,
			80,
			105,
			112,
			101,
			124,
			69,
			110,
			116,
			114,
			121,
			0,
			0,
			0,
			0,
			29,
			84,
			101,
			108,
			101,
			112,
			97,
			116,
			104,
			121,
			124,
			77,
			97,
			103,
			110,
			105,
			102,
			105,
			99,
			101,
			110,
			116,
			83,
			101,
			110,
			100,
			80,
			105,
			112,
			101,
			0,
			0,
			0,
			0,
			33,
			84,
			101,
			108,
			101,
			112,
			97,
			116,
			104,
			121,
			124,
			78,
			101,
			116,
			119,
			111,
			114,
			107,
			83,
			116,
			114,
			101,
			97,
			109,
			69,
			120,
			116,
			101,
			110,
			115,
			105,
			111,
			110,
			115,
			0,
			0,
			0,
			0,
			14,
			84,
			101,
			108,
			101,
			112,
			97,
			116,
			104,
			121,
			124,
			80,
			111,
			111,
			108,
			0,
			0,
			0,
			0,
			16,
			84,
			101,
			108,
			101,
			112,
			97,
			116,
			104,
			121,
			124,
			83,
			101,
			114,
			118,
			101,
			114,
			0,
			0,
			0,
			0,
			25,
			84,
			101,
			108,
			101,
			112,
			97,
			116,
			104,
			121,
			124,
			84,
			104,
			114,
			101,
			97,
			100,
			70,
			117,
			110,
			99,
			116,
			105,
			111,
			110,
			115,
			0,
			0,
			0,
			0,
			15,
			84,
			101,
			108,
			101,
			112,
			97,
			116,
			104,
			121,
			124,
			85,
			116,
			105,
			108,
			115
		};
		result.TotalFiles = 11;
		result.TotalTypes = 13;
		result.IsEditorOnly = false;
		return result;
	}

	// Token: 0x02000011 RID: 17
	private struct MonoScriptData
	{
		// Token: 0x0400002B RID: 43
		public byte[] FilePathsData;

		// Token: 0x0400002C RID: 44
		public byte[] TypesData;

		// Token: 0x0400002D RID: 45
		public int TotalTypes;

		// Token: 0x0400002E RID: 46
		public int TotalFiles;

		// Token: 0x0400002F RID: 47
		public bool IsEditorOnly;
	}
}
